version: "3.5"
services:
  # Orion is the context broker
  orion:
    image: fiware/orion:2.4.0
    hostname: orion
    container_name: fiware-orion
    depends_on:
      - mongo-db
    networks:
      default:
        ipv4_address: 172.18.1.9
    ports:
      - "1026:1026" # localhost:1026
    command: -dbhost mongo-db -logLevel DEBUG
    healthcheck:
      test: curl --fail -s http://orion:1026/version || exit 1

  # IoT-Agent is configured for the UltraLight Protocol
  iot-agent:
    image: fiware/iotagent-ul:1.13.0
    hostname: iot-agent
    container_name: fiware-iot-agent
    depends_on:
      - mongo-db
      - orion
    networks:
      default:
        ipv4_address: 172.18.1.12
    ports:
      - "4041:4041" # localhost:4041
      - "7896:7896" # localhost:7896
    environment:
      - IOTA_CB_HOST=orion # name of the context broker to update context
      - IOTA_CB_PORT=1026 # port the context broker listens on to update context
      - IOTA_NORTH_PORT=4041
      - IOTA_REGISTRY_TYPE=mongodb #Whether to hold IoT device info in memory or in a database
      - IOTA_LOG_LEVEL=DEBUG # The log level of the IoT Agent
      - IOTA_TIMESTAMP=true # Supply timestamp information with each measurement
      - IOTA_CB_NGSI_VERSION=v2 # use NGSIv2 when sending updates for active attributes
      - IOTA_AUTOCAST=true # Ensure Ultralight number values are read as numbers not strings
      - IOTA_MONGO_HOST=mongo-db # The host name of MongoDB
      - IOTA_MONGO_PORT=27017 # The port mongoDB is listening on
      - IOTA_MONGO_DB=iotagentul # The name of the database used in mongoDB
      - IOTA_HTTP_PORT=7896 # The port used for device traffic over HTTP
      - IOTA_PROVIDER_URL=http://iot-agent:4041
      - IOTA_DEFAULT_RESOURCE=/iot/d
      # - IOTA_AUTH_ENABLED=true
      # - IOTA_AUTH_TYPE=oauth2
      # - IOTA_AUTH_HEADER=Authorization
      # - IOTA_AUTH_HOST=keyrock
      # - IOTA_AUTH_PORT=3005
      # - IOTA_AUTH_URL=http://keyrock:3005
      # - IOTA_AUTH_CLIENT_ID=tutorial-dckr-site-0000-xpresswebapp
      # - IOTA_AUTH_CLIENT_SECRET=tutorial-dckr-host-0000-clientsecret
      # - IOTA_AUTH_PERMANENT_TOKEN=true
      # - IOTA_AUTH_TOKEN_PATH=/oauth2/token

    healthcheck:
      test: curl --fail -s http://iot-agent:4041/iot/about || exit 1

  # Keyrock is an Identity Management Front-End
  keyrock:
    image: fiware/idm:7.8.2
    container_name: fiware-keyrock
    hostname: keyrock
    networks:
      default:
        ipv4_address: 172.18.1.5
    expose:
      - 3005
    depends_on:
      - mysql-db
    ports:
      - "3005:3005" # localhost:3005
    environment:
      - DEBUG=idm:*
      - IDM_DB_HOST=mysql-db
      - IDM_DB_PASS_FILE=/run/secrets/my_secret_data
      - IDM_DB_USER=root
      - IDM_HOST=http://localhost:3005
      - IDM_PORT=3005
      - IDM_CORS_ENABLED=true
    secrets:
      - my_secret_data
    healthcheck:
      test: curl --fail -s http://localhost:3005/version || exit 1

  # PEP Proxy for Orion
  orion-proxy:
    image: fiware/pep-proxy:7.8.2
    container_name: fiware-orion-proxy
    hostname: orion-proxy
    networks:
      default:
        ipv4_address: 172.18.1.10
    depends_on:
      - keyrock
    deploy:
      restart_policy:
        condition: on-failure
    ports:
      - "1027:1027" # localhost:1027
    expose:
      - "1027"
    environment:
      - PEP_PROXY_APP_HOST=orion
      - PEP_PROXY_APP_PORT=1026
      - PEP_PROXY_PORT=1027
      - PEP_PROXY_IDM_HOST=keyrock
      - PEP_PROXY_HTTPS_ENABLED=false
      - PEP_PROXY_AUTH_ENABLED=false
      - PEP_PROXY_IDM_SSL_ENABLED=false
      - PEP_PROXY_IDM_PORT=3005
      - PEP_PROXY_APP_ID=tutorial-dckr-site-0000-xpresswebapp
      - PEP_PROXY_USERNAME=pep_proxy_00000000-0000-0000-0000-000000000000
      - PEP_PASSWORD=test
      - PEP_PROXY_PDP=idm
      - PEP_PROXY_MAGIC_KEY=1234
      - PEP_PROXY_PUBLIC_PATHS=/version
    healthcheck:
      test: curl --fail -s http://orion-proxy:1027/version || exit 1

  sanctuary-backend:
    image: pradiptakp/sanctuary-backend
    container_name: sanctuary-backend
    networks:
      - default
    depends_on:
      - orion-proxy
      - iot-agent
      - keyrock
      - orion
    networks:
      default:
        ipv4_address: 172.18.1.16
    deploy:
      restart_policy:
        condition: on-failure
    ports:
      - "3002:3002"
    expose:
      - "3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
      - ORION_URL=http://172.18.1.10:1027
      - ORION_BYPASS_URL=http://172.18.1.9:1026
      - KEYROCK_URL=http://172.18.1.5:3005
      - IOT_AGENT_URL=http://172.18.1.12:4041

  sanctuary-dashboard:
    image: pradiptakp/sanctuary-dashboard
    container_name: sanctuary-dashboard
    networks:
      - default
    depends_on:
      - sanctuary-backend
    deploy:
      restart_policy:
        condition: on-failure
    ports:
      - "3003:3003"
    expose:
      - "3003"
    environment:
      - REACT_APP_ENV=PROD
      - REACT_APP_HOST_URL=http://172.18.1.16:3002

  # Database
  mongo-db:
    image: mongo:3.6
    hostname: mongo-db
    container_name: db-mongo
    expose:
      - "27017"
    ports:
      - "27017:27017" # localhost:27017
    networks:
      - default
    command: --bind_ip_all --smallfiles
    volumes:
      - mongo-db:/data
    healthcheck:
      test: |
        host=`hostname --ip-address || echo 'localhost'`; 
        mongo --quiet $host/test --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)' && echo 0 || echo 1

  mysql-db:
    restart: always
    image: mysql:5.7
    hostname: mysql-db
    container_name: db-mysql
    expose:
      - "3306"
    ports:
      - "3306:3306" # localhost:3306
    networks:
      default:
        ipv4_address: 172.18.1.6
    environment:
      - "MYSQL_ROOT_PASSWORD_FILE=/run/secrets/my_secret_data"
      - "MYSQL_ROOT_HOST=172.18.1.5" # Allow Keyrock to access this database
    volumes:
      - mysql-db:/var/lib/mysql
      - ./mysql-data:/docker-entrypoint-initdb.d/:ro
    secrets:
      - my_secret_data

networks:
  default:
    ipam:
      config:
        - subnet: 172.18.1.0/24
volumes:
  mysql-db: ~
  mongo-db: ~
  iot-agent: ~

secrets:
  my_secret_data:
    file: secrets.txt
